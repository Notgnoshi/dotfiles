#!/usr/bin/env python3
import argparse
import shlex
from collections import Counter
from os.path import expanduser

# Commands like 'git' where 'git add' and 'git rebase' should be treated as
# distinctly different.
MULTI_COMMAND_COMMANDS = {
    "apt",
    "cargo",
    "dnf",
    "docker",
    "git",
    "ip",
    "route",
    "service",
    "sudo",
    "systemctl",
    "time",
}

BASH_HISTORY = expanduser("~/.bash_history")


def get_subcommands(command):
    """Takes the root, or root + subcommand if indicated by MULTI_COMMAND_COMMANDS."""
    if not command:
        return ""

    # Filter out commands like "CXX=clang++ cmake -B build/"
    try:
        parts = shlex.split(command)
    except ValueError:
        return ""
    parts = [p for p in parts if "=" not in p]

    if not parts:
        return ""

    command = parts[0]
    if command in MULTI_COMMAND_COMMANDS and len(parts) >= 2:
        command = command + " " + parts[1]
    return command


def main(n):
    """Analyze and print statistics about ~/.bash_history"""
    with open(BASH_HISTORY, "r", encoding="utf-8") as history:
        # Filter out the timestamps
        history = (l for l in history if not l.startswith("#"))
        history = Counter(get_subcommands(c) for c in history)
        total = sum(history.values())

        for command, count in history.most_common(n):
            percent = (count / total) * 100
            print(f"{count}\t{percent:05.2f}%\t{command}")


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-n",
        "--number",
        default=10,
        type=int,
        help="The number of most-common items to show",
    )

    args = parser.parse_args()
    main(args.number)
